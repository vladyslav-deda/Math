// Generated by Dagger (https://dagger.dev).
package com.example.data.firebase_users_db.di;

import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata("javax.inject.Named")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class FirebaseUsersDbModule_ProvideUsersDbReferenceFactory implements Factory<DatabaseReference> {
  private final Provider<FirebaseDatabase> firebaseDatabaseProvider;

  public FirebaseUsersDbModule_ProvideUsersDbReferenceFactory(
      Provider<FirebaseDatabase> firebaseDatabaseProvider) {
    this.firebaseDatabaseProvider = firebaseDatabaseProvider;
  }

  @Override
  public DatabaseReference get() {
    return provideUsersDbReference(firebaseDatabaseProvider.get());
  }

  public static FirebaseUsersDbModule_ProvideUsersDbReferenceFactory create(
      Provider<FirebaseDatabase> firebaseDatabaseProvider) {
    return new FirebaseUsersDbModule_ProvideUsersDbReferenceFactory(firebaseDatabaseProvider);
  }

  public static DatabaseReference provideUsersDbReference(FirebaseDatabase firebaseDatabase) {
    return Preconditions.checkNotNullFromProvides(FirebaseUsersDbModule.INSTANCE.provideUsersDbReference(firebaseDatabase));
  }
}
